# YAML for launching the orderer
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orderer
  labels:
    app: orderer
spec:
  serviceName: orderer
  # Single instance of the Orderer Pod is needed
  replicas: 1
  selector:
    matchLabels:
      app: orderer
  template:
    metadata:
      labels:
        app: orderer
    spec:
      containers:
        - name: orderer

          # Image used
          image: orderer

          # Uncomment the following during development/testing of the image
          # imagePullPolicy: Always
          env:
            # Points to the orderer.yaml
            - name: FABRIC_CFG_PATH
              value: /var/hyperledger/config
            # Level of logging
            - name: FABRIC_LOGGING_SPEC
              value: INFO
            - name: CORE_PEER_LOCALMSPID
              value: OrdererMSP
          volumeMounts:
            # This is pointing to the PVC
            - name: data-orderer
              mountPath: /var/ledger

  volumeClaimTemplates:
    - metadata:
        name: data-orderer
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: general
        resources:
          requests:
            storage: 1Gi

---
# Expose the port 7050 as ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: orderer-clusterip

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: orderer

  ports:
    - name: orderer-clusterip
      port: 7050

  type: ClusterIP

---
# Expose the port 30750 as node port - NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: orderer-nodeport

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: orderer

  ports:
    - name: orderer-nodeport
      port: 7050
      nodePort: 7050

  type: NodePort
