# YAML for launching the orderer
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: peer1-sports
  labels:
    app: peer1-sports
spec:
  serviceName: peer1-sports
  replicas: 1
  selector:
    matchLabels:
      app: peer1-sports
  template:
    metadata:
      labels:
        app: peer1-sports
    spec:
      containers:
        - name: peer1-sports
          # Image used
          image: mutti11/peer1_sports
          # Uncomment the following during development/testing of the image
          imagePullPolicy: Always
          env:
            - name: FABRIC_CFG_PATH
              value: /var/hyperledger/config
            - name: CORE_PEER_LOCALMSPID
              value: SportsMSP
            - name: CORE_PEER_ID
              value: peer1.sports.example.com
            - name: FABRIC_LOGGING_SPEC
              value: INFO
            - name: ORDERER_ADDRESS
              value: orderer-clusterip:30750
            - name: ORG_CONTEXT
              value: sports
            - name: CORE_PEER_ADDRESS
              value: peer1-sports-clusterip:31451
            - name: CORE_PEER_LISTENADDRESS
              value: 0.0.0.0:31451
            - name: CORE_PEER_CHAINCODELISTENADDRESS
              value: 0.0.0.0:31452
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: peer0-sports-clusterip:31351
            - name: CORE_PEER_GOSSIP_ENDPOINT
              value: peer0-sports-clusterip:31351
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: 0.0.0.0:31451
          volumeMounts:
            - name: peer1-sports-ledger
              mountPath: /var/ledger
            - name: dockersock
              mountPath: /var/run/docker.sock
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
  volumeClaimTemplates:
    - metadata:
        name: peer1-sports-ledger
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: general
        resources:
          requests:
            storage: 1Gi

---
# Expose the port 31451 as ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: peer1-sports-clusterip

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: peer1-sports

  ports:
    - name: peer1-sports-clusterip
      port: 31451
    - name: peer1-sports-cc-clusterip
      port: 31452

  type: ClusterIP

---
# Expose the port 31451 as node port -  NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: peer1-sports-nodeport

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: peer1-sports

  ports:
    - name: peer1-sports-nodeport-751
      port: 31451
      nodePort: 31451
    - name: peer1-sports-cc-nodeport-752
      port: 31452
      nodePort: 31452

  type: NodePort
